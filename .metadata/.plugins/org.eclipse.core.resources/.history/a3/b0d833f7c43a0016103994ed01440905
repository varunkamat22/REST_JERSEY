package printer;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.activation.MimetypesFileTypeMap;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.container.AsyncResponse;
import javax.ws.rs.container.Suspended;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.StreamingOutput;

import org.glassfish.jersey.media.multipart.FormDataContentDisposition;
import org.glassfish.jersey.media.multipart.FormDataParam;

@Path("/printer")
public class PrinterService {

	@GET()
	@Path("/list")
	@Produces(MediaType.APPLICATION_JSON)
	public List<Printer> getPrinterList() {
		List<Printer> printers = new ArrayList<Printer>();
		printers.add(new Printer("P110", "BNG"));
		printers.add(new Printer("P112", "BNG"));
		printers.add(new Printer("P118", "HYD"));
		printers.add(new Printer("P119", "HYD"));
		return printers;
	}

	@POST()
	@Path("/add")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Printer addPrinter(Printer printer) {
		return printer;
	}

	@POST()
	@Path("/print")
	@Consumes(MediaType.MULTIPART_FORM_DATA)
	@Produces(MediaType.TEXT_PLAIN)
	public Response printFile(@FormDataParam("file") InputStream is,
			@FormDataParam("file") FormDataContentDisposition fileDetail) {
		return Response
				.status(200)
				.entity("{status:Success;filename:" + fileDetail.getFileName()
						+ ";}").build();
	}

	@POST()
	@Path("/addall")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Map<String, Boolean> addAllPrinters(List<Printer> printers) {
		Map<String, Boolean> returnMap = new HashMap<String, Boolean>();
		for (Printer p : printers) {
			returnMap.put(p.getId(), Boolean.TRUE);
		}
		return returnMap;
	}

	@GET()
	@Path("/getfile/{file_id}")
	@Produces("image/*")
	public Response getFile(@PathParam("file_id") String file_id){
		File f = new File("C:\\Users\\vakamat\\Documents\\pics_nice\\8.jpg");
		if (!f.exists()) {
			System.out.println("File does not exist");
			throw new WebApplicationException(404);
		}
		String mt = new MimetypesFileTypeMap().getContentType(f);
		return Response.ok(f, mt).header("content-disposition","attachment; filename = test_img.jpg").build();
	}
	
	@GET()
	@Path("/asynclist")
	@Produces(MediaType.APPLICATION_JSON)
	public List<Printer> asyncGetPrinterList(@Suspended final AsyncResponse asyncResponse){
		
		new Thread(new Runnable(){
			public void run() {
				List<Printer> printers = new ArrayList<Printer>();
				printers.add(new Printer("P110", "BNG"));
				printers.add(new Printer("P112", "BNG"));
				printers.add(new Printer("P118", "HYD"));
				printers.add(new Printer("P119", "HYD"));	
				asyncResponse.resume(Response.ok().build());
			}
		}).start();	
	}
}
